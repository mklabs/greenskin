#!/usr/bin/env node

process.env.DEBUG = typeof process.env.DEBUG !== 'undefined' ? process.env.DEBUG : 'sauce-browsertime*';

// This hackery is required for debug to write on STDERR like it used to (changed when ?)
console.log = console.error;
var debug  = require('debug')('sauce-browsertime');
var DB = require('../lib/db');

var username = process.env.SAUCE_USERNAME;
var accesskey = process.env.SAUCE_ACCESS_KEY;
var webdriverHost = 'ondemand.saucelabs.com';
var webdriverPort = 80;

// Config

var options = {
  browser: String,
  platform: String,
  type: String,
  orientation: String,
  version: String,
  runs: Number,
  reporter: String,
  storage: String,
  'storage-key': String,
  hostname: String,
  port: Number,
  help: Boolean
};

var shorthands = {
  b: '--browser',
  p: '--platform',
  t: '--type',
  o: '--orientation',
  R: '--reporter',
  v: '--version',
  H: '--hostname',
  h: '--help',
  db: '--storage',
  dbk: '--storage-key',
  n: '--runs',
};

var nopt = require('nopt')(options, shorthands);
var help = require('../lib/nopt-help');
var url = nopt.argv.remain[0];

if (nopt.help || !url) return help(options, shorthands, { program: 'sauce-browsertime' })
  .desc('browser', 'Saucelabs browser (default: chrome)')
  .desc('version', 'Saucelabs browser version (default: unspecified)')
  .desc('platform', 'Saucelabs platform (default: unspecified)')
  .desc('type', 'Saucelabs device type (default: unspecified)')
  .desc('orientation', 'Saucelabs device orientation (default: unspecified)')
  .desc('runs', 'Number of runs per URL (default: 1)')
  .desc('hostname', 'Webdriver-grid hostname (default: ' + webdriverHost + ')')
  .desc('reporter', 'Mocha reporter (default: json)')
  .desc('port', 'Specify webdriver-grid port (default: 80)')
  .desc('storage', 'Path to JSON file to aggregate results over time (default: disabled)')
  .desc('storage-key', 'The "key" to use to persist the result (default: current timestamp)')
  .usage(function() {
    console.log('Usage: sauce-browsertime [options] [urls, ...]');
    console.log('');
    console.log('    $ sauce-browsertime http://example.com');
    console.log('    $ sauce-browsertime http://example.com/page-one http://example.com/page-two');
    console.log('    $ sauce-browsertime http://example.com/page-one --browser android');
    console.log('');
    console.log('See https://saucelabs.com/platforms for the list of available OS / Browser / Version');
    console.log('');
  });


var webdriverHost = nopt.hostname || 'ondemand.saucelabs.com';
var webdriverPort = nopt.port || 80;

// Desired browser / platform

var desired = { browserName: nopt.browser || 'chrome' };
desired.name = 'Collecting Navigation Timings with ' + desired.browserName;
desired.tags = ['sauce-browsertime'];
if (nopt.platform) desired.platform = nopt.platform;
if (nopt.version) desired.version = nopt.version;
if (nopt.type) desired['device-type'] = nopt.type;
if (nopt.orientation) desired['device-orientation'] = nopt.orientation;
if (nopt.hostname) webdriverHost = nopt.hostname;
if (nopt.port) webdriverPort = nopt.port;

// checking sauce credential
if (!username || !accesskey) {
  console.warn(
    '\nPlease configure your sauce credential:\n\n' +
    'export SAUCE_USERNAME=<SAUCE_USERNAME>\n' +
    'export SAUCE_ACCESS_KEY=<SAUCE_ACCESS_KEY>\n\n'
  );

  throw new Error('Missing sauce credentials');
}

// Run
nopt.hostname = nopt.hostname || webdriverHost;
nopt.port = nopt.port || webdriverPort;
nopt.username = username;
nopt.accesskey = accesskey;
nopt.desired = desired;

// Initing storage
var storage;
if (nopt.storage) storage = new DB(nopt.storage, nopt);

require('..').run(nopt.argv.remain, nopt, function(err, results) {
  if (err) throw err;
  if (storage) storage.save(results);
});

